###################################################################################################
# File for sanity testing for Capella v4 API Phase - 1.

# Test GROUPING:
#     - Group P0 : Organization (2 endpoints)
#     - Group P1 : Project (5 endpoints)
#     - Group P2 : Cluster (7 endpoints)
#     - Group P3 : Bucket (6 endpoints)
#     - Group P4 : Schedule Cluster On/Off (4 endpoints)
#     - Group P5 : Sample Buckets (4 endpoints)
#     - Group P6 : Scopes (4 endpoints)
#     - Group P7 : Collections (5 endpoints)
#     - Group P8 : VPC - Private Networking (4 endpoints) [Currently not supported] XXXXXXXXXXXXXX
#     - Group P9 : Private Endpoint Service (7 endpoints)
#     - Group P10 : App ServiceOnOff (2 endpoints)
#     - Group P11 : Events (4 endpoints)

# Some Params can be specified while running tests in the pipeline or locally by editing the file or passing them in the test configuration.
#     - `server_version` : The server version for capella cluster to be deployed. DEFAULT = 7.6
#     - `cluster_template` : The specifications of the cluster to be deployed in the tests. DEFAULT = AWS_template_m7_xlarge
#     - `storageBackend` : The storage backend of the bucket to be created with for all the bucket related tests. DEFAULT = magma
###################################################################################################

Capella.RestAPIv4.Organizations.list_organizations.ListOrganization:
    test_api_path,GROUP=P0;functional
    test_authorization,GROUP=P0;security
Capella.RestAPIv4.Organizations.get_organizations.GetOrganization:
    test_api_path,GROUP=P0
    test_authorization,GROUP=P0;security

Capella.RestAPIv4.Projects.list_projects.ListProject:
    test_api_path,GROUP=P1;functional
    test_authorization,GROUP=P1;security
Capella.RestAPIv4.Projects.get_projects.GetProject:
    test_api_path,GROUP=P1;functional
    test_authorization,GROUP=P1;security
Capella.RestAPIv4.Projects.delete_projects.DeleteProject:
    test_api_path,GROUP=P1;functional
    test_authorization,GROUP=P1;security
Capella.RestAPIv4.Projects.create_projects.CreateProject:
    test_api_path,GROUP=P1;functional
    test_authorization,GROUP=P1;security
    test_payload,GROUP=P1;functional
Capella.RestAPIv4.Projects.update_projects.UpdateProject:
    test_api_path,GROUP=P1;functional
    test_authorization,GROUP=P1;security
    test_payload,GROUP=P1;functional

Capella.RestAPIv4.Clusters.get_clusters.GetCluster:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security
Capella.RestAPIv4.Clusters.list_clusters.ListCluster:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security
Capella.RestAPIv4.Clusters.delete_clusters.DeleteCluster:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security
Capella.RestAPIv4.Clusters.create_clusters.CreateCluster:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security
Capella.RestAPIv4.Clusters.update_clusters.UpdateCluster:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security

Capella.RestAPIv4.Buckets.get_buckets.GetBucket:
    test_api_path,GROUP=P3;functional
    test_authorization,GROUP=P3;security
    test_api_path,storageBackend=couchstore,GROUP=P3;functional
Capella.RestAPIv4.Buckets.list_buckets.ListBucket:
    test_api_path,GROUP=P3;functional
    test_authorization,GROUP=security
    test_api_path,storageBackend=couchstore,GROUP=P3
Capella.RestAPIv4.Buckets.create_buckets.CreateBucket:
    test_api_path,GROUP=P3;functional
    test_payload,GROUP=P3;functional
    test_authorization,GROUP=P3;security
    test_api_path,storageBackend=couchstore,GROUP=P3;functional
    test_payload,storageBackend=couchstore,GROUP=P3;functional
Capella.RestAPIv4.Buckets.update_buckets.UpdateBucket:
    test_api_path,GROUP=P3;functional
    test_payload,GROUP=P3;functional
    test_authorization,GROUP=P3;security
    test_api_path,storageBackend=couchstore,GROUP=P3;functional
    test_payload,storageBackend=couchstore,GROUP=P3;functional
Capella.RestAPIv4.Buckets.delete_buckets.DeleteBucket:
    test_api_path,GROUP=P3;functional
    test_authorization,GROUP=P3;security
    test_api_path,storageBackend=couchstore,GROUP=P3;functional
Capella.RestAPIv4.Buckets.flush_buckets.FlushBucket:
    test_api_path,GROUP=P3;functional
    test_authorization,GROUP=P3;security
    test_api_path,storageBackend=couchstore,GROUP=P3;functional

Capella.RestAPIv4.OnOffSchedule.get_cluster_schedule.GetClusterSchedule:
    test_api_path,GROUP=P4;functional
    test_authorization,GROUP=P4;security
Capella.RestAPIv4.OnOffSchedule.create_cluster_schedule.CreateClusterSchedule:
    test_api_path,GROUP=P4;functional
    test_authorization,GROUP=P4;security
Capella.RestAPIv4.OnOffSchedule.delete_cluster_schedule.DeleteClusterSchedule:
    test_api_path,GROUP=P4;functional
    test_authorization,GROUP=P4;security
Capella.RestAPIv4.OnOffSchedule.update_cluster_schedule.UpdateClusterSchedule:
    test_api_path,GROUP=P4;functional
    test_authorization,GROUP=P4;security

Capella.RestAPIv4.Samples.get_samples.GetSample:
    test_api_path,GROUP=P5;functional
    test_authorization,GROUP=P5;security
Capella.RestAPIv4.Samples.list_samples.ListSample:
    test_api_path,GROUP=P5;functional
    test_authorization,GROUP=P5;security
Capella.RestAPIv4.Samples.create_samples.CreateSample:
    test_api_path,GROUP=P5;functional
    test_authorization,GROUP=P5;security
Capella.RestAPIv4.Samples.delete_samples.DeleteSample:
    test_api_path,GROUP=P5;functional
    test_authorization,GROUP=P5;security

Capella.RestAPIv4.Scopes.get_scopes.GetScope:
    test_api_path,GROUP=P6;functional
    test_authorization,GROUP=P6;security
    test_api_path,storageBackend=couchstore,GROUP=P6;functional
Capella.RestAPIv4.Scopes.list_scopes.ListScope:
    test_api_path,GROUP=P6;functional
    test_authorization,GROUP=P6;security
    test_api_path,storageBackend=couchstore,GROUP=P6;functional
Capella.RestAPIv4.Scopes.create_scopes.CreateScope:
    test_api_path,GROUP=P6;functional
    test_authorization,GROUP=P6;security
    test_api_path,storageBackend=couchstore,GROUP=P6;functional
Capella.RestAPIv4.Scopes.delete_scopes.DeleteScope:
    test_api_path,GROUP=P6;functional
    test_authorization,GROUP=P6;security
    test_api_path,storageBackend=couchstore,GROUP=P6;functional

Capella.RestAPIv4.Collections.get_collections.GetCollection:
    test_api_path,GROUP=P7;functional
    test_authorization,GROUP=P7;security
    test_api_path,storageBackend=couchstore,GROUP=P7;functional
Capella.RestAPIv4.Collections.list_collections.ListCollection:
    test_api_path,GROUP=P7;functional
    test_authorization,GROUP=P7;security
    test_api_path,storageBackend=couchstore,GROUP=P7;functional
Capella.RestAPIv4.Collections.create_collections.CreateCollection:
    test_api_path,GROUP=P7;functional
    test_authorization,GROUP=P7;security
    test_api_path,storageBackend=couchstore,GROUP=P7;functional
Capella.RestAPIv4.Collections.delete_collections.DeleteCollection:
    test_api_path,GROUP=P7;functional
    test_authorization,GROUP=P7;security
    test_api_path,storageBackend=couchstore,GROUP=P7;functional
Capella.RestAPIv4.Collections.update_collections.UpdateCollection:
    test_api_path,GROUP=P7;functional
    test_authorization,GROUP=P7;security
    test_api_path,storageBackend=couchstore,GROUP=P7;functional

Capella.RestAPIv4.VPCs.get_network_peering_records.GetNetworkPeers:
    test_api_path,GROUP=P8;functional
    test_authorization,GROUP=P8;security
Capella.RestAPIv4.VPCs.list_network_peering_records.ListNetworkPeers:
    test_api_path,GROUP=P8;functional
    test_authorization,GROUP=P8;security
Capella.RestAPIv4.VPCs.create_network_peerings.PostNetworkPeers:
    test_api_path,GROUP=P8;functional
    test_authorization,GROUP=P8;security
Capella.RestAPIv4.VPCs.delete_network_peerings.DeleteNetworkPeers:
    test_api_path,GROUP=P8;functional
    test_authorization,GROUP=P8;security

Capella.RestAPIv4.PrivateEndpoints.get_private_endpoint_service_status.GetPrivateEndpointService:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
Capella.RestAPIv4.PrivateEndpoints.enable_private_endpoint_services.PostPrivateEndpointService:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
Capella.RestAPIv4.PrivateEndpoints.private_endpoint_commands.PostEndpointCommand:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
    test_payload,GROUP=P9;functional
Capella.RestAPIv4.PrivateEndpoints.accept_private_endpoints.PostAssociate:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
Capella.RestAPIv4.PrivateEndpoints.list_private_endpoints.ListEndpoints:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
Capella.RestAPIv4.PrivateEndpoints.delete_private_endpoints.PostUnassociate:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security
Capella.RestAPIv4.PrivateEndpoints.disable_private_endpoint_services.DeletePrivateEndpointService:
    test_api_path,GROUP=P9;functional
    test_authorization,GROUP=P9;security

Capella.RestAPIv4.AppService.app_service_off.AppServiceOff:
    test_api_path,GROUP=P10;functional
    test_authorization,GROUP=P10;security
Capella.RestAPIv4.AppService.app_service_on.AppServiceOn:
    test_api_path,GROUP=P10;functional
    test_authorization,GROUP=P10;security

Capella.RestAPIv4.Clusters.cluster_off.ClusterOff:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security
Capella.RestAPIv4.Clusters.cluster_on.ClusterOn:
    test_api_path,GROUP=P2;functional
    test_authorization,GROUP=P2;security

Capella.RestAPIv4.Events.list_tenant_events.ListTenantEvents:
    test_api_path,GROUP=P11;functional
    test_authorization,GROUP=P11;security
Capella.RestAPIv4.Events.get_tenant_event.GetTenantEvent:
    test_api_path,GROUP=P11;functional
    test_authorization,GROUP=P11;security
Capella.RestAPIv4.Events.list_project_events.ListProjectEvents:
    test_api_path,GROUP=P11;functional
    test_authorization,GROUP=P11;security
Capella.RestAPIv4.Events.get_project_event.GetProjectEvent:
    test_api_path,GROUP=P11;functional
    test_authorization,GROUP=P11;security

Capella.RestAPIv4.AppServicesAuditLogging.list_app_service_audit_log_events.ListAuditLogEvents:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.get_app_service_audit_log_states.GetAuditLog:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.update_app_service_audit_log_states.PutAuditLog:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
    test_payload,GROUP=P12;functional
Capella.RestAPIv4.AppServicesAuditLogging.get_app_endpoint_audit_log_configs.GetAuditLogConfig:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.update_app_endpoint_audit_log_configs.PutAuditLogConfig:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.update_app_service_audit_log_streamings.PutAuditLogStreaming:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.get_app_service_audit_log_streamings.GetAuditLogStreaming:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.patch_app_service_audit_log_streamings.PatchAuditLogStreaming:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.list_app_service_audit_log_exports.ListAuditLogExports:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.get_app_service_audit_log_export_by_ids.GetAuditLogExports:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
Capella.RestAPIv4.AppServicesAuditLogging.create_app_service_audit_log_exports.PostAuditLogExports:
    test_api_path,GROUP=P12;functional
    test_authorization,GROUP=P12;security
    test_payload,GROUP=P12;functional