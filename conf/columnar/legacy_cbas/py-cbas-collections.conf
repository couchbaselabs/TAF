cbas.cbas_collection_functional_test.CBASDataverseAndScopes:

    test_create_drop_dataverse,cbas_spec=local_datasets,no_of_dv=50,no_of_threads=20,GROUP=P0,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Creating Dataverse
    test_create_dataverse,dv_name=Default,error=An analytics scope with this name {0} already exists,error_code=24039,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataverse,dv_name=Metadata,error=An analytics scope with this name {0} already exists,error_code=24039,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB 41466
    # max length of each part in dataverse name is 251(number of bytes in UTF-8encoding)
    test_create_dataverse,cardinality=1,name_1=251,validate_error=False,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas,GROUP=P1
    test_create_dataverse,cardinality=1,name_1=256,error=Invalid name for a database object: '{0}',error_code=24112,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Dropping Dataverse
    test_drop_dataverse,dv_name=Default,error=Compilation error: Default analytics scope can't be dropped,error_code=24001,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas,GROUP=P1

    #MB-41278
    test_drop_dataverse,dv_name=Metadata,error=Compilation error: Invalid operation - Cannot drop analytics scope: Metadata,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Creating analytics scope
    test_create_analytics_scope,dv_name=Default,error=An analytics scope with this name {0} already exists,error_code=24039,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,dv_name=Metadata,error=An analytics scope with this name {0} already exists,error_code=24039,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,dv_name=part1.part2.part3,error=Invalid analytics scope name {0}. Only 1 or 2 name components are allowed,error_code=24116,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    # MB 41466
    test_create_analytics_scope,cardinality=1,name_1=251,validate_error=False,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,cardinality=1,name_1=256,error=Invalid name for a database object: '{0}',error_code=24112,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,cardinality=2,name_1=251,name_2=251,validate_error=False,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,cardinality=2,name_1=251,name_2=256,error=Invalid name for a database object: '{0}',error_code=24112,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,cardinality=2,name_1=256,name_2=251,error=Invalid name for a database object: '{0}',error_code=24112,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_analytics_scope,cardinality=2,name_1=256,name_2=256,error=Invalid name for a database object: '{0}',error_code=24112,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Dropping analytics scope
    test_drop_analytics_scope,dv_name=Default,error=Compilation error: Default analytics scope can't be dropped,error_code=24001,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    # MB-41278
    test_drop_analytics_scope,dv_name=Metadata,error=Compilation error: Invalid operation - Cannot drop analytics scope: Metadata,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # USE DDL statement with 1 part dataverse name
    test_use_statement,cardinality=1,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

cbas.cbas_collection_functional_test.CBASDatasetsAndCollections:
    test_create_drop_datasets,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,cbas_spec=local_datasets,no_of_dv=5,no_of_threads=20,ds_per_dv=10,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Creating Dataset negative scenarios
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=2,validate_error=True,error=Syntax error,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,no_dataset_name=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41465
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,no_dataset_name=True,validate_error=True,error=Syntax error,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41614
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,remove_default_collection=True,validate_error=True,error=Data service collection ({0}._default._default) does not exist,GROUP=P1,consider_default_KV_collection=False,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41424
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,name_length=256,validate_error=True,error=Invalid name for a database object,GROUP=P1,fixed_length=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas


    # Dropping Dataset
    test_drop_non_existent_dataset,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Creating Dataset negative scenarios
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,GROUP=sanity,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=2,validate_error=True,error=Syntax error,GROUP=P1,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,GROUP=sanity, cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,no_dataset_name=True,GROUP=P2,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41465
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,no_dataset_name=True,validate_error=True,error=Syntax error,GROUP=P0SET1,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41614
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=1,remove_default_collection=True,validate_error=True,error=Data service collection ({0}._default._default) does not exist,GROUP=P1,cbas_collection=True,consider_default_KV_collection=False,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Data service collection ({0}) does not exist,GROUP=P0SET1,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,invalid_kv_scope=True,validate_error=True,error=Data service scope ({0}) does not exist,GROUP=P1,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_dataset,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,cardinality=1,bucket_cardinality=3,invalid_dataverse=True,validate_error=True,error=Cannot find analytics scope with name {0},GROUP=P0SET1,cbas_collection=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Dropping Dataset
    test_drop_non_existent_dataset,cbas_collection=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=3,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name and verifying whether synonym with bucket name is created in default dataverse
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=1,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name dataverse is already present.
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=3,create_dataverse=True,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when dataverse bucket_name._default is already present
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=1,create_dataverse=True,GROUP=P0SET1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name with compress dataset flag set to True.
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,compress_dataset=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on a non-existent collection
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Data service collection ({0}) does not exist,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on a non-existent KV scope
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,invalid_kv_scope=True,validate_error=True,error=Data service scope ({0}) does not exist,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name when a synonym with collection name is already present in the dataverse bucket_name.scope_name
    # MB-41675
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,create_dataverse=True,synonym_name=Collection,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on default collection when synonym with Bucket name on another dataset already present in Default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,create_dataverse=True,synonym_name=Bucket,validate_error=True,error=Operation failed because there already exists a synonym {0} in analytics scope Default, synonym_on_other_dataset=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on default collection when synonym with Bucket name already present in Default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,create_dataverse=True,synonym_name=Bucket,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on a collection when dataset with collection name already present in dataverse bucket_name.scope_name
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,precreate_dataset=NonDefault,validate_error=True,error=An analytics collection with name {0} already exists in analytics scope {1},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 3-part name on default collection when dataset with bucket name already present in default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,precreate_dataset=Default,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name with compress dataset flag set to True.
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,compress_dataset=True,verify_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name on non-existent KV bucket
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,invalid_kv_bucket=True,validate_error=True,error=Bucket ({0}) does not exist,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when a synonym with collection name is already present in the dataverse bucket_name.scope_name
    # MB-41675
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,create_dataverse=True,synonym_name=Collection,verify_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when synonym with Bucket name on other dataset already present in Default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,synonym_name=Bucket,validate_error=True,error=Operation failed because there already exists a synonym {0} in analytics scope Default, synonym_on_other_dataset=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when synonym with Bucket name already present in Default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,synonym_name=Bucket,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when dataset with collection name already present in dataverse bucket_name.scope_name
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,precreate_dataset=NonDefault,validate_error=True,error=An analytics collection with name {0} already exists in analytics scope {1},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Enabling analytics from KV using 1-part name when dataset with bucket name already present in default dataverse
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,precreate_dataset=Default,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41513 Enabling analytics from KV using 1-part name when default collection is not present in KV bucket
    test_enabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=1,remove_default_collection=True,validate_error=True,error=Data service collection ({0}) does not exist,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 3-part name
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=3,GROUP=sanity,disable_from_kv=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 1-part name
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=1,GROUP=P0SET1,disable_from_kv=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 3-part name dataverse is already present.
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=3,create_dataverse=True,GROUP=P0SET1,disable_from_kv=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 1-part name when dataverse bucket_name._default is already present
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,bucket_cardinality=1,create_dataverse=True,GROUP=P0SET1,disable_from_kv=True,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 3-part name when other dataset in present in the dataverse bucket_name.scope_name.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,create_dataset=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 3-part name when other synonyms on the dataset is present.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,create_synonym=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 3-part name for KV bucket on which it was not enabled
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=3,invalid_kv_collection=True,validate_error=True,error=Operation failed because analytics collection {0} in analytics scope {1} either does not exist or was not created by ALTER COLLECTION ENABLE ANALYTICS,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41834 Disabling analytics from KV using 3-part name when dataset with name bucket.scope.collection already present.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,bucket_cardinality=3,consider_default_KV_collection=False,enable_analytics=False,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41834 Disabling analytics from KV using 1-part name when dataset with name bucket.scope.collection already present.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,enable_analytics=False,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 1-part name when other dataset in present in the dataverse bucket_name.scope_name.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,create_dataset=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 1-part name when other synonyms on the dataset is present.
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,create_synonym=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Disabling analytics from KV using 1-part name for KV bucket on which it was not enabled
    test_disabling_analytics_collection_from_KV,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=1,invalid_kv_bucket=True,validate_error=True,error=Operation failed because analytics collection {0} in analytics scope {1} either does not exist or was not created by ALTER COLLECTION ENABLE ANALYTICS,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create multiple synonyms
    test_create_multiple_synonyms,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,cbas_spec=local_datasets,no_of_dv=2,ds_per_dv=3,no_of_synonym=100,no_of_threads=20,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Synonym name same as dataset name in same dataverse.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_dataverse=dataset,synonym_name=dataset,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Synonym name same as dataset name in different dataverse.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_dataverse=new,synonym_name=dataset,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in same dataverse.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in different dataverse.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Delete dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,action_on_dataset=drop,validate_query_error=True,query_error=Cannot find analytics collection {0} in analytics scope {1} nor an alias with name {0},GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,action_on_dataset=recreate,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in same dataverse and Delete dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,action_on_dataset=drop,validate_query_error=True,query_error=Cannot find analytics collection {0} in analytics scope {1} nor an alias with name {0},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in different dataverse and Delete dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_dataset=drop,validate_query_error=True,query_error=Cannot find analytics collection {0} in analytics scope {1} nor an alias with name {0},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in same dataverse and Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,action_on_dataset=recreate,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in different dataverse and Delete and recreate dataset on which synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_dataset=recreate,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in same dataverse and Delete synonym on which new synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,action_on_synonym=drop,validate_query_error=True,query_error=Cannot find analytics collection {0} in analytics scope {1} nor an alias with name {0},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in different dataverse and Delete synonym on which new synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_synonym=drop,validate_query_error=True,query_error=Cannot find analytics collection {0} in analytics scope {1} nor an alias with name {0},GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in same dataverse and Delete and recreate synonym on which new synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,action_on_synonym=recreate,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create synonym on synonym in different dataverse and Delete and recreate synonym on which new synonym is created
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_on_synonym=True,different_syn_on_syn_dv=True,action_on_synonym=recreate,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Dangling synonym.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_dataverse=dataset,synonym_name=new,dangling_synonym=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # MB-41859 Create synonym in non-existent dataverse
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_dataverse=dataset,synonym_name=new,invalid_dataverse=True,validate_error=True,error=Cannot find analytics scope with name invalid,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create multiple synonym with same name in same dataverse.
    test_create_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,synonym_dataverse=new,synonym_name=new,synonym_on_synonym=True,same_syn_on_syn_name=True,error=A synonym with this name {0} already exists,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Creating multiple synonyms with same name with if not exists flag does not change synonym properties
    test_if_not_exists_flag_for_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create a dataset and a synonym (on another dataset) with the same name.
    test_dataset_and_synonym_name_resolution_precedence,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Create a dataset and a dangling synonym with the same name.
    test_dataset_and_synonym_name_resolution_precedence,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,dangling_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check creating synonym in same dataverse, if a dataset and a synonym (on another dataset) with the same name are present
    test_dataset_and_synonym_name_resolution_precedence,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,synonym_on_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check creating synonym in different dataverse, if a dataset and a synonym (on another dataset) with the same name are present
    test_dataset_and_synonym_name_resolution_precedence,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,synonym_on_synonym=True,different_syn_on_syn_dv=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check dropping synonym does not effect dataset it was created on.
    test_drop_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check dropping non-existent synonym.
    test_drop_analytics_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,invalid_synonym=True,validate_error=True,error=Cannot find synonym with name {0},GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check flushing of KV bucket, empties all the datasets based on collections in the flushed bucket.
    test_datasets_created_on_KV_collections_after_flushing_KV_bucket,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,flushEnabled=True,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check flushing of a KV bucket does not affect datasets created on another bucket.
    test_datasets_created_on_KV_collections_after_flushing_KV_bucket,cluster_kv_infra=bkt_spec,bucket_spec=analytics.multi_bucket,flushEnabled=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check adding new data after flushing the KV bucket.
    test_dataset_for_data_addition_post_KV_flushing,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,flushEnabled=True,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check flushing the same KV bucket multiple times, with adding data between subsequent flushes.
    test_dataset_for_data_addition_post_KV_flushing,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,flushEnabled=True,no_of_flushes=10,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check flushing the same KV bucket multiple times, without adding data between subsequent flushes.
    test_dataset_for_data_addition_post_KV_flushing,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,flushEnabled=True,no_of_flushes=10,reload_data=False,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check adding new data while flushing the KV bucket.
    test_dataset_for_adding_new_docs_while_flushing,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,flushEnabled=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Check KV flushing while data mutation.
    test_dataset_when_KV_flushing_during_data_mutation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,flushEnabled=True,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    #MaxTTL tests
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,docTTL=180,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=180,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,bucketTTL=180,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,docTTL=360,collectionTTL=180,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,docTTL=180,collectionTTL=360,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,docTTL=180,bucketTTL=360,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,docTTL=360,bucketTTL=180,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=360,bucketTTL=180,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=180,bucketTTL=360,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=360,bucketTTL=450,docTTL=180,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=180,bucketTTL=450,docTTL=360,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=450,bucketTTL=270,docTTL=180,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=180,bucketTTL=360,docTTL=450,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=450,bucketTTL=180,docTTL=360,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=360,bucketTTL=180,docTTL=450,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    #test_docs_deleted_in_dataset_once_MaxTTL_reached,collectionTTL=270,bucketTTL=270,docTTL=270,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Index creation on multipart dataset name
    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_query_drop_on_multipart_name_secondary_index,analytics_index=True,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Index created on dataset should work on synonym created on dataset
    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,verify_index_on_synonym=True,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_query_drop_on_multipart_name_secondary_index,analytics_index=True,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,verify_index_on_synonym=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Index creation on synonym
    test_create_secondary_index_on_synonym,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_create_secondary_index_on_synonym,analytics_index=True,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,GROUP=P1,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Effects on KV collection deletion and recreation on datasets
    test_dataset_after_deleting_and_recreating_KV_entity,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=1,analytics_index=False,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_dataset_after_deleting_and_recreating_KV_entity,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=1,analytics_index=True,GROUP=sanity,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    test_dataset_after_deleting_and_recreating_KV_entity,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=3,analytics_index=False,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_dataset_after_deleting_and_recreating_KV_entity,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=3,analytics_index=True,GROUP=P0SET2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    # Effect of KV collection deletion on datasets that were not created on deleted collection
    test_KV_collection_deletion_does_not_effect_dataset_on_other_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=1,analytics_index=False,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_KV_collection_deletion_does_not_effect_dataset_on_other_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=1,analytics_index=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas

    test_KV_collection_deletion_does_not_effect_dataset_on_other_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=3,analytics_index=False,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas
    test_KV_collection_deletion_does_not_effect_dataset_on_other_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.single_bucket,index_name=idx_age,index_fields=age:bigint,cardinality=1,bucket_cardinality=3,analytics_index=True,GROUP=P2,nodes_init=4,services_init=kv:n1ql-kv-cbas-cbas


    # Test to create documents and datasets in parallel
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=3125,num_collections=20,bucket_size=auto,parallel_load_percent=300,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=1250,num_collections=50,bucket_size=auto,parallel_load_percent=300,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=893,num_collections=70,bucket_size=auto,parallel_load_percent=300,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=625,num_collections=100,bucket_size=auto,parallel_load_percent=300,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2

    # test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=417,num_collections=150,bucket_size=auto,parallel_load_percent=300,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2

    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=1,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=3125,num_collections=20,bucket_size=auto,parallel_load_percent=300,run_query=True,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=2,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=1250,num_collections=50,bucket_size=auto,parallel_load_percent=300,run_query=True,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET1
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=3,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=893,num_collections=70,bucket_size=auto,parallel_load_percent=300,run_query=True,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET1
    test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=4,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=625,num_collections=100,bucket_size=auto,parallel_load_percent=300,run_query=True,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET1
    # test_analytics_with_parallel_dataset_creation,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=5,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=417,num_collections=150,bucket_size=auto,parallel_load_percent=300,run_query=True,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET1

    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=1250,parallel_load_percent=150,num_buckets=1,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,disable_from_kv=True,GROUP=P0SET1
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=625,parallel_load_percent=150,num_buckets=2,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,disable_from_kv=True,GROUP=P0SET1
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=417,parallel_load_percent=150,num_buckets=3,bucket_size=auto,num_scopes=10,num_collections=5,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,disable_from_kv=True,GROUP=P0SET1
    # test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=833,parallel_load_percent=150,num_buckets=5,bucket_size=auto,num_scopes=10,num_collections=3,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,disable_from_kv=True,GROUP=P0SET1

    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=1250,parallel_load_percent=150,num_buckets=1,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,disable_from_kv=True,GROUP=P0SET1
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=625,parallel_load_percent=150,num_buckets=2,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,disable_from_kv=True,GROUP=P0SET1
    test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=417,parallel_load_percent=150,num_buckets=3,bucket_size=auto,num_scopes=10,num_collections=5,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,disable_from_kv=True,GROUP=P0SET2
    # test_enabling_disabling_analytics_collection_on_all_KV_collections,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,num_items=833,parallel_load_percent=150,num_buckets=5,bucket_size=auto,num_scopes=10,num_collections=3,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,disable_from_kv=True,GROUP=P0SET2

    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,index_name=idx_age,index_fields=age:bigint,num_items=1250,parallel_load_percent=300,num_buckets=1,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,index_name=idx_age,index_fields=age:bigint,num_items=625,parallel_load_percent=300,num_buckets=2,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2
    # test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,index_name=idx_age,index_fields=age:bigint,num_items=417,parallel_load_percent=300,num_buckets=3,bucket_size=auto,num_scopes=10,num_collections=5,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET2

    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,index_name=idx_age,index_fields=age:bigint,num_items=1250,parallel_load_percent=300,num_buckets=1,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,GROUP=P0SET3
    test_create_query_drop_on_multipart_name_secondary_index,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,bucket_cardinality=3,index_name=idx_age,index_fields=age:bigint,num_items=625,parallel_load_percent=300,num_buckets=2,bucket_size=auto,num_scopes=5,num_collections=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,run_query=True,GROUP=P0SET3

    test_create_drop_datasets,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=1000,num_collections=100,bucket_size=auto,iterations=30,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET3
    test_multiple_datasets_on_collection,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,ds_per_dv=10,ds_per_collection=10,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=500,num_collections=10,bucket_size=auto,parallel_load_percent=300,nodes_init=4,services_init=kv:n1ql-cbas-cbas-cbas,GROUP=P0SET2
    test_analytics_with_killing_cbas_memcached,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=2,ds_per_dv=5,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=500,num_collections=100,bucket_size=auto,parallel_load_percent=300,cbas_kill_count=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET3
    test_analytics_with_killing_cbas_memcached,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=2,ds_per_dv=5,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=500,num_collections=100,bucket_size=auto,parallel_load_percent=300,memcached_kill_count=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET3
    test_analytics_with_tampering_links,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,no_of_dv=2,ds_per_dv=5,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=500,num_collections=100,bucket_size=auto,parallel_load_percent=300,tamper_links_count=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET3
    # MB-43338
    test_analytics_with_tampering_links,cluster_kv_infra=bkt_spec,bucket_spec=analytics.default,cbas_spec=local_datasets,cardinality=1,bucket_cardinality=3,flushEnabled=True,num_items=10,num_collections=100,bucket_size=auto,tamper_links_count=10,nodes_init=6,services_init=kv:n1ql-kv-cbas-cbas-cbas-cbas,GROUP=P0SET3
