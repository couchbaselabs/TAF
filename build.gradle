group 'com.couchbase.qe'
version '1.0.0-alpha.1'

apply plugin: 'java-library'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'http://files.couchbase.com/maven2/' }
    maven { url 'https://repo.spring.io/milestone' }
    
    // Pull in any jars in folder 'libs'.  Only the transactions jar should be placed here.
    flatDir {
        dirs 'libs'
    }
}


dependencies {

    compile name: 'couchbase-transactions-1.0.0-alpha.4'

	// Include transactions dependencies.  When txns is GA and available on a Maven repo, this won't
	// be needed.
    compile 'com.couchbase.client:java-client:3.0.0-alpha.3'
    compile "io.projectreactor:reactor-core:3.2.1.RELEASE"
    compile group: 'io.projectreactor.addons', name: 'reactor-adapter', version: '3.2.0.RELEASE'
    compile group: 'io.projectreactor.addons', name: 'reactor-extra', version: '3.2.0.RELEASE'
    compile 'io.reactivex:rxjava-reactive-streams:1.2.1'

    // Other dependencies of TAF
    testCompile 'ch.qos.logback:logback-classic:1.1.2'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.54'
}

// Task that runs "jython testrunner.py" with the correct CLASSPATH
task testrunner(type:Exec) {

    // Want to check if these properties exist so can signal usage errors, but unfortunately gradle seems to run this
    // task always during initialisation, and barfs on this.
//    if (!project.hasProperty("jython")) {
//        throw new Exception("Must specify -P jython '/path/to/jython'")
//    }
//
//    if (!project.hasProperty("args")) {
//        throw new Exception("Must specify -P args 'all_testrunner_args'")
//    }

    if (project.hasProperty("args") && project.hasProperty("jython")) {
        def jythonpath = sourceSets.main.runtimeClasspath.asPath

        def jythonLocation = project.property("jython")
        def testRunnerArgs = project.property("args").split()

        // Add the build output containing the built Java source.  Should get this from a gradle variable really but it's
        // very unlikely to ever change.
        def cmd = [jythonLocation, '-J-cp', jythonpath + ":build/classes/java/main", 'testrunner.py']

        testRunnerArgs.each { cmd.add(it) }

        println("Running: " + cmd.join(" "))

        commandLine cmd
    }
}

testrunner.dependsOn(compileJava)
